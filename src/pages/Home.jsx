import { Box, Container, Link, Stack, Typography } from '@mui/material'
import KeyboardArrowRightIcon from '@mui/icons-material/KeyboardArrowRight'
import { Suspense } from 'react'
import Spline from '@splinetool/react-spline'

import fbIcon from '@/assets/images/fbIcon.png'
import youtubeIcon from '@/assets/images/youtubeIcon.png'
import tiktokIcon from '@/assets/images/tiktokIcon.png'
import LogoIcon from '@/components/LogoIcon'
import rankingBanner from '@/assets/images/ranking-banner-home.png'
import config from '@/routes/config'
import VideoCarousel from '@/components/VideoCarousel'
import MuiLink from '@/components/MuiLink'
import ImageLazy from '@/components/ImageLazy'
import VideoComp from '@/components/VideoComp'
import { useGetSocialsQuery } from '@/features/api/siteInfoApi'
import { useGetAllTopicsQuery } from '@/features/api/topicApi'
import { useLoadingState } from '@/components/withLoadingState'

function Home() {
  const { data: socials, isSuccess: socialsLoaded } = useGetSocialsQuery()
  const topicsQueryResult = useGetAllTopicsQuery()
  const { data: topics = [], LoadingStateComponent: TopicsLoadingState } = useLoadingState(topicsQueryResult, {
    variant: 'inline',
    loadingText: 'ƒêang t·∫£i ch·ªß ƒë·ªÅ...',
    emptyText: 'Ch∆∞a c√≥ ch·ªß ƒë·ªÅ n√†o',
    hasDataCheck: (topics) => topics && topics.length > 0,
  })

  const onSplineLoad = (spline) => {
    // ƒêi·ªÅu ch·ªânh camera ƒë·ªÉ cƒÉn gi·ªØa scene
    const camera = spline.findObjectByName('Camera')
    if (camera) {
      // Reset camera position ƒë·ªÉ cƒÉn gi·ªØa ho√†n to√†n
      camera.position.set(0, 0, 8)
      camera.lookAt(0, 0, 0)
      camera.rotation.set(0, 0, 0)
    }

    // T·ª± ƒë·ªông fit scene v√†o viewport v√† cƒÉn gi·ªØa
    spline.setZoom(0.8)
  }
  return (
    <Box>
      {/* Head Banner */}
      <Box
        sx={{
          width: '100%',
          minHeight: '700px',
          background: 'linear-gradient(135deg, #e8f5e8 0%, #f0f8f0 50%, #e1f0e1 100%)',
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'center',
          py: 8,
        }}
      >
        <Container maxWidth="lg">
          <Box
            sx={{
              display: 'flex',
              flexDirection: 'column',
              alignItems: 'center',
              justifyContent: 'center',
              textAlign: 'center',
            }}
          >
            {/* Title Section */}
            <Box sx={{ mb: 3 }}>
              <Typography
                variant="h2"
                sx={{
                  fontWeight: 'bold',
                  color: 'primary.main',
                  mb: 1,
                  fontSize: { xs: '2rem', md: '2.5rem' },
                }}
              >
                üß™ T√îI Y√äU H√ìA H·ªåC üß™
              </Typography>
              <Typography
                variant="h6"
                sx={{
                  color: 'primary.dark',
                  opacity: 0.8,
                  fontSize: { xs: '1rem', md: '1.125rem' },
                }}
              >
                Kh√°m ph√° th·∫ø gi·ªõi h√≥a h·ªçc qua nh·ªØng b√†i h·ªçc sinh ƒë·ªông
              </Typography>
            </Box>

            {/* Spline Container */}
            <Box
              sx={{
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center',
                width: '100%',
                mb: 3,
              }}
            >
              <Suspense
                fallback={
                  <Box
                    sx={{
                      width: { xs: '350px', sm: '600px', md: '800px' },
                      height: { xs: '280px', sm: '450px', md: '600px' },
                      bgcolor: 'rgba(3, 76, 49, 0.05)',
                      border: '2px dashed',
                      borderColor: 'primary.light',
                      borderRadius: 3,
                      display: 'flex',
                      alignItems: 'center',
                      justifyContent: 'center',
                    }}
                  >
                    <Typography color="primary.main" variant="h6">
                      ƒêang t·∫£i m√¥ h√¨nh 3D...
                    </Typography>
                  </Box>
                }
              >
                <Box
                  sx={{
                    width: { xs: '350px', sm: '600px', md: '800px' },
                    height: { xs: '280px', sm: '450px', md: '600px' },
                    borderRadius: 3,
                    overflow: 'hidden',
                    boxShadow: '0 8px 32px rgba(3, 76, 49, 0.15)',
                    border: '1px solid',
                    borderColor: 'primary.light',
                    bgcolor: '#1a1a1a',
                    position: 'relative',
                    display: 'flex',
                    alignItems: 'center',
                    justifyContent: 'center',
                  }}
                >
                  <Spline
                    scene="https://prod.spline.design/Dr3KVR2NzyYMhFQ1/scene.splinecode"
                    onLoad={onSplineLoad}
                    style={{
                      width: '100%',
                      height: '100%',
                      background: 'linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 50%, #1a1a1a 100%)',
                      display: 'block',
                      margin: 'auto',
                      objectFit: 'contain',
                      objectPosition: 'center center',
                    }}
                  />
                </Box>
              </Suspense>
            </Box>

            {/* Description Section */}
            <Box sx={{ mt: 0, maxWidth: 600 }}>
              <Typography
                variant="body1"
                sx={{
                  color: 'text.secondary',
                  lineHeight: 1.7,
                  fontSize: { xs: '0.9rem', md: '1rem' },
                }}
              >
                Tham gia c√πng ch√∫ng t√¥i trong h√†nh tr√¨nh kh√°m ph√° nh·ªØng b√≠ ·∫©n c·ªßa h√≥a h·ªçc. T·ª´ nh·ªØng ph·∫£n ·ª©ng ƒë∆°n gi·∫£n
                ƒë·∫øn c√°c c√¥ng th·ª©c ph·ª©c t·∫°p, ch√∫ng ta s·∫Ω c√πng nhau chinh ph·ª•c m√¥n h·ªçc tuy·ªát v·ªùi n√†y!
              </Typography>
            </Box>
          </Box>
        </Container>
      </Box>

      {/* Main Content */}
      <Container>
        {/* Socials */}
        <Stack direction="row" spacing={3} my={2} alignItems="center" justifyContent="center">
          {socialsLoaded &&
            socials.map((social) => (
              <Link key={social.id} href={social.url} target="_blank">
                <Stack direction="row" alignItems="center" spacing={1} key={social.id}>
                  {(() => {
                    switch (social.platform) {
                      case 'facebook':
                        return <LogoIcon color="white" size={30} src={fbIcon} />
                      case 'youtube':
                        return <LogoIcon color="white" size={30} src={youtubeIcon} />
                      case 'tiktok':
                        return <LogoIcon color="white" size={30} src={tiktokIcon} />
                      default:
                        return null
                    }
                  })()}
                  <Typography fontWeight={700}>Th·∫ßy Ph·∫°m Th·∫Øng</Typography>
                </Stack>
              </Link>
            ))}
        </Stack>
        {/* Ranking */}
        <Box component="a" href={config.routes.ranking}>
          <img src={rankingBanner} alt="rankingBanner" width="100%" />
        </Box>

        {/* Video Carousels by Topic */}
        <TopicsLoadingState>
          {Array.isArray(topics) &&
            topics.map((topic) => (
              <Box key={topic.id} mb={4}>
                <Stack direction="row" justifyContent="space-between" my={1}>
                  <Stack direction="column">
                    <Typography sx={{ '& span': { fontSize: '1.25rem' } }} fontWeight={700}>
                      <Typography component="span" color="primary" fontWeight="bold">
                        {topic.title}
                      </Typography>
                    </Typography>
                    <Typography variant="subtitle2">B·ª©t ph√° ƒëi·ªÉm s·ªë c√πng TYHH</Typography>
                  </Stack>
                  <MuiLink
                    to={`/courses?topic=${topic.slug}`}
                    color="tertiary.light"
                    display="inline-flex"
                    alignItems="center"
                    mt="auto"
                  >
                    Xem t·∫•t c·∫£ kh√≥a h·ªçc
                    <KeyboardArrowRightIcon fontSize="small" />
                  </MuiLink>
                </Stack>
                <VideoCarousel videoList={topic.courses || []} />
              </Box>
            ))}
        </TopicsLoadingState>

        {/* Free Video */}
        <Typography variant="h6" fontWeight={600} color="primary.main">
          Video Mi·ªÖn Ph√≠
        </Typography>
        <Stack direction="row">
          {/* Left Section: 2/3 width */}
          <Box width="66.7%">
            <VideoComp />
          </Box>
          {/* Right Section: 1/3 width */}
          <Stack direction="column" bgcolor="#60a1d5" width="33.3%">
            <Stack
              p={1}
              direction="row"
              alignItems="center"
              sx={{
                ':hover': {
                  bgcolor: '#49708d',
                },
              }}
            >
              <ImageLazy src="mini-live.png" alt="mini-live" w={200} />
              <Box ml={1} maxWidth="calc(100% - 108px)">
                <Typography noWrap variant="subtitle2" color="#fff" fontWeight={600}>
                  LIVE 8: KI·ªÇM TRA CH·∫§T L∆Ø·ª¢NG CH∆Ø∆†NG I - NG√ÄY 7 - KI·ªÇM TRA CH·∫§T L∆Ø·ª¢NG CH∆Ø∆†NG I
                </Typography>
                <Typography noWrap variant="subtitle2" color="#fff" fontWeight={600}>
                  Kho√° h·ªçc <MuiLink color="#66ec83">2K8 - H√ìA H·ªåC 10 (SGK M·ªöI)</MuiLink>
                </Typography>
              </Box>
            </Stack>
          </Stack>
        </Stack>

        {/* Bottom Banner */}
        <Box position="relative" my={2}>
          <Link
            sx={{
              ':before': {
                height: '100%',
                width: '100%',
                border: '10px solid hsla(0, 0%, 100%, .45)',
                background: 'hsla(0, 0%, 100%, .15)',
                content: '""',
                position: 'absolute',
                transform: 'scale(0)',
                transition: 'transform 0.3s ease-out',
                zIndex: -1,
              },
              ':hover:before': {
                transform: 'scale(1)',
                zIndex: 1,
              },
            }}
            href={config.routes.home}
          >
            <ImageLazy src="banner.png?tr=w-1920,h-700,cm-extract" alt="banner" w="100%" />
          </Link>
        </Box>
      </Container>
    </Box>
  )
}

export default Home
